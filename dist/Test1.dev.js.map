{"version":3,"sources":["Test1.js"],"names":["people","Mary","Bob","John","listPeople","sortedNames","Object","keys","sort","sortedPeople","map","name","join","console","log"],"mappings":";;AAAA;AAEA,IAAMA,MAAM,GAAG;AAAEC,EAAAA,IAAI,EAAE,EAAR;AAAYC,EAAAA,GAAG,EAAE,EAAjB;AAAqBC,EAAAA,IAAI,EAAE;AAA3B,CAAf;;AAEA,SAASC,UAAT,CAAoBJ,MAApB,EAA4B;AAC1B,MAAMK,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYP,MAAZ,EAAoBQ,IAApB,EAApB;AACA,MAAMC,YAAY,GAAGJ,WAAW,CAACK,GAAZ,CAAgB,UAACC,IAAD;AAAA,qBAAaA,IAAb,eAAsBX,MAAM,CAACW,IAAD,CAA5B;AAAA,GAAhB,CAArB;AACA,SAAOF,YAAY,CAACG,IAAb,CAAkB,IAAlB,CAAP;AACD;;AAEDC,OAAO,CAACC,GAAR,CAAYV,UAAU,CAACJ,MAAD,CAAtB,E,CAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA","sourcesContent":["// Sort People by name using sort()\r\n\r\nconst people = { Mary: 17, Bob: 62, John: 32 };\r\n\r\nfunction listPeople(people) {\r\n  const sortedNames = Object.keys(people).sort();\r\n  const sortedPeople = sortedNames.map((name) => `${name} (${people[name]})`);\r\n  return sortedPeople.join(\", \");\r\n}\r\n\r\nconsole.log(listPeople(people));\r\n\r\n// without using sort()\r\n\r\n// const people = { Mary: 17, Bob: 62, John: 32 };\r\n\r\n// function listPeople(people) {\r\n//   const sortedNames = Object.keys(people).reduce((sorted, name) => {\r\n//     const insertIndex = sorted.findIndex((sortedName) => name < sortedName);\r\n//     if (insertIndex !== -1) {\r\n//       sorted.splice(insertIndex, 0, name);\r\n//     } else {\r\n//       sorted.push(name);\r\n//     }\r\n\r\n//     return sorted;\r\n//   }, []);\r\n\r\n//   return sortedNames.join(\", \");\r\n// }\r\n\r\n// console.log(listPeople(people));\r\n"],"file":"Test1.dev.js"}